---
import Head from "@components/Head.astro";
import PrimaryNav from "@components/PrimaryNav.astro";
import SecondaryNav from "@components/SecondaryNav.astro";
import Main from "@components/Main.astro";
import Rugged from "@components/Rugged.astro";
import List from '@components/List.astro';

const primary = {
	Expertise: '/expertise',
	Projects: '/projects',
	Media: '/media',
	Connect: '/connect'
}
---

<style is:global>
	body {
		display: flex;
		gap: 1px;
		height: 100vh;
		background: color-mix(in oklch, var(--bg), var(--fg) 20%);
		overflow: hidden;
	}
	
	@media (max-width: 900px) {
		body {
			flex-direction: column;
			height: auto;
			min-height: 100vh;
			overflow-y: auto;
			overflow-x: hidden;
		}
	}

</style>

<!doctype html>
<html lang="en">
  <Head {...Astro.props} />
  <body>
    <PrimaryNav/>
	<SecondaryNav/>
	<Main/>
	<Rugged/>
    <script async defer src="https://scripts.withcabin.com/hello.js"></script>
  </body>
</html>

<script>
	const $audio = document.getElementById('audio-player');

	function allowMotion($parent, $child) {
		if (localStorage.getItem('motion-toggle') === 'false') return $child;

		$parent.addEventListener('animationend', () => {
			$child.remove();
			$parent.classList.remove('tearout');
		});
		$parent.classList.add('tearout');

		return { remove: Function.prototype }
	}

	document.addEventListener('click', (ev: Event) => {
		const $elem = ev.target as HTMLAnchorElement;
		if (!$elem || !$elem.dataset.target) return;
		ev.preventDefault();
		const target = $elem.dataset.target as string;
		const $host = document.getElementById(target) as HTMLElement;
		const $content = $host.firstElementChild;

		fetch($elem.href).then((res) => res.text()).then((str) => {
			$audio?.play();
			const remove = allowMotion($host, $content);
			$host.insertAdjacentHTML('afterbegin', str);
			remove?.remove();
		});
	});
</script>
---
const { links } = Astro.props;
---

<style>
  .keyboard {
    background-image: linear-gradient(90deg, #aaa, #ccc);
    box-shadow: -1em -1em 1.5em rgba(0, 0, 0, 0.6), 0 0 0 1px #aaa inset, -0.05em 0.1em 0 0.05em #aaa;
    border: 1px solid #bbb;
    font-family: -apple-system, BlinkMacSystemFont,"Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
    padding: 0.5em;
    padding-inline-end: .5em;
    border-radius: 0.5em;
    display: inline-flex;
    flex-wrap: wrap;
    margin-block: -3rem;
    transform: translate(3rem, -4rem) rotate(2deg);
    will-change: transform;
  }

  .key, .keyboard:before, .keyboard:after {
    text-align: left;
    text-decoration: none;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    border-radius: 0.3em;
    line-height: 1;
    margin: 0.2em;
    padding: .4em;
    gap: .5em;
    flex: 1;
    cursor: pointer;
    -webkit-user-select: none;
    border: 1px solid #444;
    border-bottom-color: #555;
    transition: .1s linear;
    color: #666;
    background-color: #eee;
    box-shadow: -0.2em -0.125em 0.125em rgba(0, 0, 0, 0.25), 0 0 0 0.04em rgba(0, 0, 0, 0.3), 0.02em 0.02em 0.02em rgba(0, 0, 0, 0.4) inset, -0.05em -0.05em 0.02em rgba(255, 255, 255, 0.8) inset;
  }

  .keyboard:before {
    content: '';
    height: 3.5em;
    width: 100%;
    flex: none;
    cursor: not-allowed;
  }

  .keyboard:after {
    content: 'âŒ˜';
    width: 3.5em;
    height: 3.5em;
    cursor: not-allowed;
  }

  .key:after {
    content: attr(data-host);
    font-size: .6em;
    align-self: end;
    text-indent: 5ch;
  }
</style>

<div class="keyboard">
  { Object.entries(links).map(([label, href]) => {
    const { host } = new URL(href);
    return <a class="key" data-host={ host } href={ href }>{ label }</a>
  }) }
</div>
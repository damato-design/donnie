<style>
    .host {
        position: relative;
        display: grid;
        align-items: start;
        height: 100%;
        overflow-y: auto;
        overflow-x: clip;
        background: var(--bg);
    }

    .host.tearout {
        overflow: visible;
    }

    .host > :global(*) {
        grid-area: 1 / 1 / -1 / -1;
        height: 100%;
    }

    .host.tearout:after {
        content: '';
        top: 0;
        left: 0;
        width: 100%;
        height: 100vh;
        position: absolute;
        border: 1px solid #eee;
        background: linear-gradient(10deg,
			color-mix(in oklch, var(--bg), black 10%),
			color-mix(in oklch, var(--bg), white 10%));
        filter: url(#rugged) drop-shadow(-16px 16px 20px rgba(20, 20, 20, .2));
        z-index: 1;
        transform-origin: top left;
        animation-name: tear-vertical;
        animation-duration: .6s;
        animation-timing-function: linear;
        animation-fill-mode: forwards;
    }

    .host.tearout > :global(:last-child) {
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
        animation-name: reveal-vertical;
		animation-duration: .6s;
        animation-timing-function: linear;
        animation-fill-mode: forwards;
        max-height: 100vh;
    }

    @keyframes tear-vertical {
        0% {
            transform:
                translateY(0%) rotate(0deg) scaleY(0);
        }

        50% {
            width: calc(100% / cos(-10deg));
            transform:
                translateY(50%) rotate(-10deg) scaleY(.5);
        }

        100% {
            transform:
                translateY(100%) rotate(0deg) scaleY(1);
        }
    }

    @keyframes reveal-vertical {
		to {
			clip-path: polygon(
                0 100%,
                100% 100%,
                100% 100%,
                0 100%
            );
		}
	}

    @keyframes tear-horizontal {
        0% {
            transform:
                translateX(0%) rotate(0deg) scaleX(0);
        }

        50% {
            height: calc(100% / cos(10deg));
            transform:
                translateX(50%) rotate(10deg) scaleX(.5);
        }

        100% {
            transform:
                translateX(100%) rotate(0deg) scaleX(1);
        }
    }

    @keyframes reveal-horizontal {
		100% {
			clip-path: polygon(
                100% 0,
                100% 0,
                100% 100%,
                100% 100%
            );
		}
	}

    @media (max-width: 900px) {

        .host.tearout:after {
            transform: translate(0, 0) scaleX(0);
            height: 100%;
            width: 100%;
			animation-name: tear-horizontal;
		}

        .host.tearout > :global(:last-child)  {
            animation-name: reveal-horizontal;
            max-height: auto;
        }
    }
</style>

<div class="host" { ...Astro.props}>
    <slot/>
</div>
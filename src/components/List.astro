---
import NewWindow from '@assets/new-window.svg';
const { list, target, tabs, colors = ['currentColor'] } = Astro.props;
---

<style>
    .list {
        display: grid;
        grid-template-columns: 1fr;
        perspective: 1000px;
        gap: 16px;
        margin-block: 32px;
    }

    .list.tabs {
        gap: 8px;
        list-style: none;
        margin-inline: 0;
        padding: 0;
    }

    .list.tabs li {
        font-family: "Permanent Marker", monspace;
        font-size: 1.5em;
        rotate: calc(var(--rand) * 3deg);
        background: var(--item-color);
        color: black;
        max-width: 90%;
        transform-origin: left center;
        transform-style: preserve-3d;
        transition: 0.218s ease;
        box-shadow: 5px 2px 8px -2px rgba(20,20,20,.3);
        border-bottom: 1px solid color-mix(in oklch, var(--item-color), black 10%);
        border-right: 1px solid color-mix(in oklch, var(--item-color), black 10%);
    }

    .list.tabs li:hover {
        transform: rotateY(-10deg);
    }

    a {
        font-size: 1.2em;
        text-decoration-color: var(--item-color);
        line-height: 1.2;
        display: inline-flex;
        align-items: end;
        gap: .5ch;
    }

    .list.tabs li a {
        text-decoration: none;
        padding: .25em .5em;
        opacity: 0.8;
        width: 100%;
    }
</style>

<ol class:list={['list', { tabs }]}>
    {
        Object.entries(list).map(([label, href], index) => {
            const rand = Math.random();
            return (
                <li style={`--rand: ${rand}; --item-color: ${colors.at(index) || colors.at(0)}`}>
                    <a href={href as string} data-target={target}>
                        {label}
                        { !href.startsWith('/') && <NewWindow/> }
                    </a>
                </li>
            );
        })
    }
</ol>
